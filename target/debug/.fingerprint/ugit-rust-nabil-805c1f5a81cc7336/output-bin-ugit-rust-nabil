{"$message_type":"diagnostic","message":"unused import: `base::reset`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":86,"byte_end":97,"line_start":3,"line_end":3,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use base::reset;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":82,"byte_end":99,"line_start":3,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use base::reset;","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `base::reset`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse base::reset;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `File`, `PathBuf`, and `vec_deque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/base.rs","byte_start":24,"byte_end":33,"line_start":1,"line_end":1,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":25,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/base.rs","byte_start":75,"byte_end":79,"line_start":1,"line_end":1,"column_start":76,"column_end":80,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":76,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/base.rs","byte_start":138,"byte_end":145,"line_start":1,"line_end":1,"column_start":139,"column_end":146,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":139,"highlight_end":146}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/base.rs","byte_start":24,"byte_end":35,"line_start":1,"line_end":1,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":25,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/base.rs","byte_start":73,"byte_end":79,"line_start":1,"line_end":1,"column_start":74,"column_end":80,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":74,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/base.rs","byte_start":131,"byte_end":132,"line_start":1,"line_end":1,"column_start":132,"column_end":133,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":132,"highlight_end":133}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/base.rs","byte_start":136,"byte_end":145,"line_start":1,"line_end":1,"column_start":137,"column_end":146,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":137,"highlight_end":146}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/base.rs","byte_start":145,"byte_end":146,"line_start":1,"line_end":1,"column_start":146,"column_end":147,"is_primary":true,"text":[{"text":"use std::{collections::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};","highlight_start":146,"highlight_end":147}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `File`, `PathBuf`, and `vec_deque`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/base.rs:1:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mons::{vec_deque, HashMap, HashSet, VecDeque}, fs::{self, File}, io::{self, Error, ErrorKind, Read, Write}, path::{Path, PathBuf}, vec};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/diff.rs","byte_start":933,"byte_end":939,"line_start":33,"line_end":33,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    output","highlight_start":5,"highlight_end":11}],"label":"expected `Vec<u8>`, found `Vec<Vec<u8>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/diff.rs","byte_start":645,"byte_end":652,"line_start":21,"line_end":21,"column_start":84,"column_end":91,"is_primary":false,"text":[{"text":"fn diff_trees(t_from: &HashMap<String, String>, t_to: &HashMap<String, String>) -> Vec<u8> {","highlight_start":84,"highlight_end":91}],"label":"expected `Vec<u8>` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/diff.rs","byte_start":874,"byte_end":905,"line_start":29,"line_end":29,"column_start":27,"column_end":58,"is_primary":false,"text":[{"text":"            output.extend(diff_blobs(o_from, o_to, &path));","highlight_start":27,"highlight_end":58}],"label":"this argument has type `Result<Vec<u8>, std::io::Error>`...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/diff.rs","byte_start":860,"byte_end":866,"line_start":29,"line_end":29,"column_start":13,"column_end":19,"is_primary":false,"text":[{"text":"            output.extend(diff_blobs(o_from, o_to, &path));","highlight_start":13,"highlight_end":19}],"label":"... which causes `output` to have type `Vec<Vec<u8>>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `Vec<u8>`\n   found struct `Vec<Vec<u8>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/diff.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn diff_trees(t_from: &HashMap<String, String>, t_to: &HashMap<String, String>) -> Vec<u8> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `Vec<u8>` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            output.extend(diff_blobs(o_from, o_to, &path));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument has type `Result<Vec<u8>, std::io::Error>`...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m... which causes `output` to have type `Vec<Vec<u8>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    output\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Vec<u8>`, found `Vec<Vec<u8>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `Vec<\u001b[0m\u001b[0m\u001b[1m\u001b[35mu8\u001b[0m\u001b[0m>`\u001b[0m\n\u001b[0m              found struct `Vec<\u001b[0m\u001b[0m\u001b[1m\u001b[35mVec<u8>\u001b[0m\u001b[0m>`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `NamedTempFile`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/diff.rs","byte_start":1680,"byte_end":1693,"line_start":60,"line_end":60,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    let mut f_from = NamedTempFile::new().unwrap();","highlight_start":22,"highlight_end":35}],"label":"use of undeclared type `NamedTempFile`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `NamedTempFile`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/diff.rs:60:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut f_from = NamedTempFile::new().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `NamedTempFile`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `NamedTempFile`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/diff.rs","byte_start":1730,"byte_end":1743,"line_start":61,"line_end":61,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    let mut f_to = NamedTempFile::new().unwrap();","highlight_start":20,"highlight_end":33}],"label":"use of undeclared type `NamedTempFile`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `NamedTempFile`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/diff.rs:61:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut f_to = NamedTempFile::new().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `NamedTempFile`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 3 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0433.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
